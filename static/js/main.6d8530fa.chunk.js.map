{"version":3,"sources":["info.js","index.js"],"names":["Algebra","grades","this","props","slice","algebra","react_default","a","createElement","className","id","React","Component","Analyysi","Geometria","Todennäköisyys","Lukuteoria","console","log","Form","_this","course","courseLabel","grade","placeholder","type","min","max","maxLength","value","onChange","e","target","Forms","_this2","courseForms","i","push","src_Form","key","index","renderForms","Chart","length","parseInt","gradeList","es","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","options","responsive","maintainAspectRatio","scale","ticks","stepSize","App","_this3","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","Array","fill","handleChange","bind","assertThisInitialized","list","setState","_this4","src_Chart","src_Forms","info_Algebra","info_Analyysi","info_Geometria","info_Todenn_k_isyys","info_Lukuteoria","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d8530fa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// Staattiset infolaatikot kaikille osa-alueille\r\n\r\nclass Algebra extends React.Component {\r\n    render() {\r\n        const grades = this.props.grades.slice();\r\n        const algebra = (grades[0] * 0.5 + grades[1] + grades[4] * 0.5) / 2\r\n\r\n        return(\r\n            <div className=\"info\" id=\"algebra\">\r\n                <div className=\"topBar\" id=\"algebraTopBar\"></div>\r\n                <div className=\"mathContainer\" id=\"algebraContainer\">\r\n                    <div className=\"gradeContainer\">\r\n                        <h1>Osaamisesi</h1>\r\n                        <p className=\"grade\">{algebra}</p>\r\n                    </div>\r\n\r\n                    <div className=\"mathText\">\r\n                        <h1>Algebra</h1>\r\n                        <p>Algebra (<em>\"al-jabr\"</em>, \"reunion of broken parts\") on yksi matematiikan päähaaroista. \r\n                            Algebran tutkimuskohteita ovat laskutoimitusten, kuten yhteen- tai kertolaskujen, yleiset ominaisuudet jossakin perusjoukossa.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Analyysi extends React.Component {\r\n    render() {\r\n        const grades = this.props.grades.slice();\r\n        const algebra = (grades[0] * 0.5 + grades[1] + grades[4] * 0.5) / 2\r\n\r\n        return(\r\n            <div className=\"info\" id=\"analyysi\">\r\n                <div className=\"topBar\" id=\"analyysiTopBar\"></div>\r\n                <div className=\"mathContainer\" id=\"analyysiContainer\">\r\n                    <div className=\"gradeContainer\">\r\n                        <h1>Osaamisesi</h1>\r\n                        <p className=\"grade\">{algebra}</p>\r\n                    </div>\r\n\r\n                    <div className=\"mathText\">\r\n                        <h1>Analyysi</h1>\r\n                        <p>Analyysi on yksi matematiikan päähaaroista.\r\n                            Analyysi tutkii reaalilukuja ja kompleksilukuja ja niiden funktioita.\r\n                            Analyysiin liittyvät muun muassa jatkuvuus, integraalit ja derivaatat.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Geometria extends React.Component {\r\n    render() {\r\n        const grades = this.props.grades.slice();\r\n        const algebra = (grades[0] * 0.5 + grades[1] + grades[4] * 0.5) / 2\r\n\r\n        return(\r\n            <div className=\"info\" id=\"geometria\">\r\n                <div className=\"topBar\" id=\"geometriaTopBar\"></div>\r\n                <div className=\"mathContainer\" id=\"geometriaContainer\">\r\n                    <div className=\"gradeContainer\">\r\n                        <h1>Osaamisesi</h1>\r\n                        <p className=\"grade\">{algebra}</p>\r\n                    </div>\r\n\r\n                    <div className=\"mathText\">\r\n                        <h1>Geometria</h1>\r\n                        <p>Geometria on matematiikan ala, joka tutkii kuvioita ja kappaleita ja niiden ominaisuuksia.\r\n                            Geometria syntyi varhaisissa kulttuureissa pituuksien, pinta-alojen ja tilavuuksien mittaukseen.\r\n                            Geometria sai muodollista matematiikkaa jo 600 eaa, ja Eukleideen geometrian oppikirja <em>Στοιχεῖα, Perusteet</em> julkaistiin n. 300 eaa.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Todennäköisyys extends React.Component {\r\n    render() {\r\n        const grades = this.props.grades.slice();\r\n        const algebra = (grades[0] * 0.5 + grades[1] + grades[4] * 0.5) / 2\r\n\r\n        return(\r\n            <div className=\"info\" id=\"todennäköisyys\">\r\n                <div className=\"topBar\" id=\"todennäköisyysTopBar\"></div>\r\n                <div className=\"mathContainer\" id=\"todennäköisyysContainer\">\r\n                    <div className=\"gradeContainer\">\r\n                        <h1>Osaamisesi</h1>\r\n                        <p className=\"grade\">{algebra}</p>\r\n                    </div>\r\n\r\n                    <div className=\"mathText\">\r\n                        <h1>Todennäköisyys</h1>\r\n                        <p>Todennäköisyysteoria matematiikan osa-alueena tarkastelee todennäköisyyksiä mittateorian avulla.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Lukuteoria extends React.Component {\r\n    render() {\r\n        const grades = this.props.grades.slice();\r\n        console.log(grades)\r\n        console.log(grades[0] * 0.5 + grades[1] + grades[4] * 0.5)\r\n        const algebra = (grades[0] * 0.5 + grades[1] + grades[4] * 0.5) / 2\r\n        console.log(algebra)\r\n\r\n        return(\r\n            <div className=\"info\" id=\"lukuteoria\">\r\n                <div className=\"topBar\" id=\"lukuteoriaTopBar\"></div>\r\n                <div className=\"mathContainer\" id=\"lukuteoriaContainer\">\r\n                    <div className=\"gradeContainer\">\r\n                        <h1>Osaamisesi</h1>\r\n                        <p className=\"grade\">{algebra}</p>\r\n                    </div>\r\n\r\n                    <div className=\"mathText\">\r\n                        <h1>Lukuteoria</h1>\r\n                        <p>Lukuteoria on yksi vanhimmista matematiikan aloista, joka keskittyy lukujen tutkimiseen.\r\n                            Lukuteoria käsitteli aluksi luonnollisia lukuja, mutta on myöhemmin kehittynyt tutkimaan myös laajempia lukujoukkoja.\r\n                            Lukuteoriaan kuuluvia käsitteitä ja menetelmiä ovat esimerkiksi \r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { Algebra, Analyysi, Geometria, Todennäköisyys, Lukuteoria }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Radar} from 'react-chartjs-2';\nimport {Algebra, Analyysi, Geometria, Todennäköisyys, Lukuteoria} from './info.js' // Tämä sisältää staattiset infolaatikot osa-alueista\n\n\n// React-komponentti yksittäisille input-elementille\nclass Form extends React.Component {\n    render() {\n        const course = this.props.course\n        const courseLabel = course + 1;\n        const grade = this.props.grade;\n        const placeholder = \"MAA\" + courseLabel;\n\n        return (\n            <input\n                type=\"number\"\n                min=\"4\"\n                max=\"10\"\n                maxLength=\"2\"\n                className=\"course\" \n                value={grade}\n                placeholder={placeholder}\n                onChange={(e) => this.props.onChange(e.target.value, course)}\n            />\n        )\n    }\n}\n\n// React-komponentti koko input-rivistölle\nclass Forms extends React.Component {\n    renderForms() {\n        let courseForms = [];\n        const grades = this.props.grades;\n\n        // Luo 15 input-elementtiä\n        for (let i = 0; i < 15; i++) {\n            courseForms.push(\n                <Form\n                    key={i}\n                    course={i}\n                    onChange={(value, index) => this.props.onChange(value, index)}\n                    grade={grades[i]}\n                />\n            )\n        }\n        return courseForms;\n    }\n    \n    render() {\n        return (\n            <div className=\"forms-container\">\n                {this.renderForms()}\n            </div>\n        )\n    }\n}\n\n// React-komponentti arvosanojen visualisointia varten\nclass Chart extends React.Component {\n    render() {\n        const list = [\"Algebra\", \"Analyysi\", \"Geometria\", \"Todennäköisyys\", \"Lukuteoria & Logiikka\"];\n        const grades = this.props.grades.slice();\n\n        for (let i = 0; i < grades.length; i++) {\n            if (!grades[i]) {\n                grades[i] = 4;\n            } else {\n                let value = parseInt(grades[i])\n                grades[i] = value\n            }\n        }\n\n        /* Laskee jokaiselle osa-alueelle omat arvot, joista muodostetaan gradeList\n        gradeList-listaa käytetään kuvaajassa */\n        const algebra = (grades[0] * 0.5 + grades[1] + grades[4] * 0.5) / 2\n        const analyysi = (grades[4] + grades[5] + grades[8] + grades[12]) / 4\n        const geometria = (grades[3] + grades[4] * 0.8 + grades[8] * 0.3) / 2.1\n        const todennäköisyys = (grades[0] * 0.3 + grades[9]) / 1.3\n        const lukuteoria = grades[10]\n\n        const gradeList = [algebra, analyysi, geometria, todennäköisyys, lukuteoria]\n\n        return(\n            <div className=\"chart-container\">\n                <Radar\n                    data={\n                        {labels: list,\n                        datasets: [{\n                            label: 'Osaaminen',\n                            backgroundColor: 'rgba(179,181,198,0.2)',\n                            borderColor: 'rgba(179,181,198,1)',\n                            pointBackgroundColor: 'rgba(179,181,198,1)',\n                            pointBorderColor: '#fff',\n                            pointHoverBackgroundColor: '#fff',\n                            pointHoverBorderColor: 'rgba(179,181,198,1)',\n                            data: gradeList\n                        }]\n                        }\n                    }\n                    options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scale: {\n                            ticks: {\n                            min: 0,\n                            max: 10,\n                            stepSize: 1\n                            }\n                        }\n                    }\n                    }\n                    />\n                </div>\n        )\n    }\n\n\n}\n\n// Pääkomponentti\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grades: Array(15).fill(4),\n            }\n        this.handleChange = this.handleChange.bind(this);\n        }\n\n    // Tarkistaa syötettä (arvot ainoastaan 4-10)\n    handleChange(value, index) {\n        const list = this.state.grades.slice();\n        value = parseInt(value);\n\n        if (value == 1 || 4 <= value && value <= 10) {\n            list[index] = value;\n        } else {\n            list[index] = \"\"\n        }\n        this.setState({grades: list})\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"chart_form\">\n                    <h1 className=\"title\">Matematiikan osa-alueet</h1>\n                    <Chart\n                        grades={this.state.grades}\n                    />\n                    <Forms\n                        onChange={(value, index) => this.handleChange(value, index)}\n                        grades={this.state.grades}\n                    />\n                </div>\n                <div className=\"infoSection\">\n                    <Algebra\n                        grades={this.state.grades}\n                    />\n                    <Analyysi\n                        grades={this.state.grades}\n                    />\n                    <Geometria\n                        grades={this.state.grades}\n                    />\n                    <Todennäköisyys\n                        grades={this.state.grades}\n                    />\n                    <Lukuteoria\n                        grades={this.state.grades}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}